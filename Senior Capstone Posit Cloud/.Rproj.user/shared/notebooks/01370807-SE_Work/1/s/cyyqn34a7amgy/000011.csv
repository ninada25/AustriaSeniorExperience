"0","library(party)"
"0","set.seed(01302024)"
"0",""
"0","# d <- matrix(nrow = 30, ncol = 0) # create an empty matrix"
"0","# "
"0","# # create for loop to run 10 times"
"0","# for(i in 1:30) {"
"0","#   countries_ci <- cforest(data = countries_with_happy_imputed, Happiness_score ~., control = cforest_unbiased(mtry = best.m, ntree = 1000))"
"0","#   cond_imp <- varimp(countries_ci, conditional = TRUE) # store conditional variable importance scores in cond_imp"
"0","#   cond_imp <- ifelse(cond_imp < 0, 0, cond_imp) # if CI score is negative, convert it to 0, else keep it the same"
"0","#   cond_imp_as_perc <- cond_imp/sum(cond_imp) * 100 "
"0","#   d <- matrix(cbind(d, cond_imp_as_perc), byrow = FALSE, nrow = 6, ncol = i)"
"0","# }"
"0","# d"
"0","# "
"0","# avg_countries_ci <- data.frame(rowMeans(d), row.names = names(cond_imp_as_perc)[]) # create df with AVERAGE cond imp scores as %s"
"0","# colnames(avg_countries_ci) <- ""Avg_Cond_VarImp_Score_As_Perc"" # renaming column"
"0","# avg_countries_ci <- avg_countries_ci %>% arrange(desc(avg_countries_ci)) %>% round(digits = 2)"
"0","# avg_countries_ci "
"0",""
"0","# save(avg_countries_ci, file = ""ci_countries.Rdata"")"
"0","load(""ci_countries.Rdata"") # USE TO LOAD IN TABLE QUICKLY IN THE FUTURE"
"0","avg_countries_ci"
