"0",""
"0","# Group by feature and calculate the total feature weight"
"0","total_feature_weights_countries <- explanation %>% "
"0","  group_by(feature) %>% "
"0","  summarize(total_feature_weight = sum(abs(feature_weight)),"
"0","            total_feature_weight_as_perc = (total_feature_weight/(sum(abs(explanation$feature_weight)))* 100)) %>%"
"0","  arrange(desc(total_feature_weight))"
"0",""
"0","# Round the dataframe"
"0","round_df <- function(x, digits) {"
"0","  numeric_columns <- sapply(x, class) == 'numeric'"
"0","  x[numeric_columns] <-  round(x[numeric_columns], digits)"
"0","  x"
"0","}"
"0",""
"0","total_feature_weights_countries <- round_df(total_feature_weights_countries, 2)"
"0",""
"0","# Save the results"
"0","save(total_feature_weights_countries, file = ""lime_countries.Rdata"")"
"0",""
"0","# Load the results"
"0","load(""lime_countries.Rdata"")"
"0",""
"0","# Create a new dataframe with only 'feature' and 'total_feature_weight_as_perc' columns"
"0","total_feature_weights_as_perc_countries <- total_feature_weights_countries[, c(""feature"", ""total_feature_weight_as_perc"")]"
"0",""
"0","# This dataframe contains feature names and their corresponding weights as percentages"
"0","total_feature_weights_as_perc_countries"
